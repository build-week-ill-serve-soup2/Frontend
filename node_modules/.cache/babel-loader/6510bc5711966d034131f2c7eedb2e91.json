{"ast":null,"code":"var _jsxFileName = \"/Users/lauradaugherty/FrontEnd/Frontend/src/components/Notifications.js\";\nimport React from \"react\";\n\nclass Notifications extends React.Component {\n  constructor() {\n    super();\n\n    this.getNotifications = () => {\n      let alerts = [];\n\n      if (this.props.items.length > 0) {\n        this.props.items.forEach(item => {\n          if (item.itemquantity === 0) {\n            alerts.push({\n              item: item.itemname,\n              warning: \"\".concat(item.itemname[0].toUpperCase() + item.itemname.slice(1).toLowerCase(), \" is out of stock!\")\n            });\n          } else if (item.itemquantity < item.itemthreshold) {\n            alerts.push({\n              item: item.itemname,\n              warning: \"\".concat(item.itemname[0].toUpperCase() + item.itemname.slice(1).toLowerCase(), \" is running low.\")\n            });\n          }\n        });\n      }\n\n      if (alerts.length === 0) {\n        alerts.push({\n          item: '',\n          warning: 'Ready to Get Cooking'\n        });\n      }\n\n      this.setState({\n        notifications: alerts\n      });\n    };\n\n    this.state = {\n      notifications: []\n    };\n  }\n\n  componentDidMount() {\n    this.getNotifications();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.items !== prevProps.items) {\n      this.getNotifications();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"notifications-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.notifications.map((item, index) => React.createElement(\"div\", {\n      onClick: event => this.props.searchByName(event, item.item),\n      className: \"low-stock\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, item.warning)));\n  }\n\n}\n\nexport default Notifications;","map":{"version":3,"sources":["/Users/lauradaugherty/FrontEnd/Frontend/src/components/Notifications.js"],"names":["React","Notifications","Component","constructor","getNotifications","alerts","props","items","length","forEach","item","itemquantity","push","itemname","warning","toUpperCase","slice","toLowerCase","itemthreshold","setState","notifications","state","componentDidMount","componentDidUpdate","prevProps","render","map","index","event","searchByName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,gBAjBc,GAiBK,MAAM;AACvB,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,aAAKF,KAAL,CAAWC,KAAX,CAAiBE,OAAjB,CAAyBC,IAAI,IAAI;AAC/B,cAAIA,IAAI,CAACC,YAAL,KAAsB,CAA1B,EAA6B;AAC3BN,YAAAA,MAAM,CAACO,IAAP,CAAY;AACVF,cAAAA,IAAI,EAAEA,IAAI,CAACG,QADD;AAEVC,cAAAA,OAAO,YAAKJ,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBE,WAAjB,KAAiCL,IAAI,CAACG,QAAL,CAAcG,KAAd,CAAoB,CAApB,EAAuBC,WAAvB,EAAtC;AAFG,aAAZ;AAID,WALD,MAKO,IAAIP,IAAI,CAACC,YAAL,GAAoBD,IAAI,CAACQ,aAA7B,EAA4C;AACjDb,YAAAA,MAAM,CAACO,IAAP,CAAY;AACVF,cAAAA,IAAI,EAAEA,IAAI,CAACG,QADD;AAEVC,cAAAA,OAAO,YAAKJ,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBE,WAAjB,KAAiCL,IAAI,CAACG,QAAL,CAAcG,KAAd,CAAoB,CAApB,EAAuBC,WAAvB,EAAtC;AAFG,aAAZ;AAID;AACF,SAZD;AAaD;;AACD,UAAIZ,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACvBH,QAAAA,MAAM,CAACO,IAAP,CAAY;AACVF,UAAAA,IAAI,EAAE,EADI;AAEVI,UAAAA,OAAO,EAAE;AAFC,SAAZ;AAID;;AACD,WAAKK,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEf;AADH,OAAd;AAGD,KA3Ca;;AAEZ,SAAKgB,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,gBAAL;AACD;;AAEDmB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKlB,KAAL,CAAWC,KAAX,KAAqBiB,SAAS,CAACjB,KAAnC,EAA0C;AACxC,WAAKH,gBAAL;AACD;AACF;;AA8BDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWD,aAAX,CAAyBM,GAAzB,CAA6B,CAAChB,IAAD,EAAOiB,KAAP,KAC5B;AAAK,MAAA,OAAO,EAAGC,KAAD,IAAW,KAAKtB,KAAL,CAAWuB,YAAX,CAAwBD,KAAxB,EAA+BlB,IAAI,CAACA,IAApC,CAAzB;AAAoE,MAAA,SAAS,EAAC,WAA9E;AAA0F,MAAA,GAAG,EAAEiB,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuGjB,IAAI,CAACI,OAA5G,CADD,CADH,CADF;AAOD;;AAtDyC;;AAyD5C,eAAeb,aAAf","sourcesContent":["import React from \"react\";\n\nclass Notifications extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      notifications: []\n    };\n  }\n\n  componentDidMount() {\n    this.getNotifications();\n  }\n  \n  componentDidUpdate(prevProps) {\n    if (this.props.items !== prevProps.items) {\n      this.getNotifications();\n    }\n  }\n  \n  getNotifications = () => {\n    let alerts = [];\n    if (this.props.items.length > 0) {\n      this.props.items.forEach(item => {\n        if (item.itemquantity === 0) {\n          alerts.push({\n            item: item.itemname,\n            warning: `${item.itemname[0].toUpperCase() + item.itemname.slice(1).toLowerCase()} is out of stock!`\n          })\n        } else if (item.itemquantity < item.itemthreshold) {\n          alerts.push({\n            item: item.itemname,\n            warning: `${item.itemname[0].toUpperCase() + item.itemname.slice(1).toLowerCase()} is running low.`\n          });\n        }\n      });\n    }\n    if (alerts.length === 0) {\n      alerts.push({\n        item: '',\n        warning: 'Ready to Get Cooking'\n      });\n    }\n    this.setState({\n      notifications: alerts\n    });\n  };\n\n  render() {\n    return (\n      <div className='notifications-container'>\n        {this.state.notifications.map((item, index) => (\n          <div onClick={(event) => this.props.searchByName(event, item.item)} className='low-stock' key={index}>{item.warning}</div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Notifications;"]},"metadata":{},"sourceType":"module"}